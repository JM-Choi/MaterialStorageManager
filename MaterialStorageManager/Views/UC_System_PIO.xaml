<UserControl x:Class="MaterialStorageManager.Views.UC_System_PIO"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaterialStorageManager.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModels="clr-namespace:MaterialStorageManager.ViewModels"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="553" d:DesignWidth="960" Foreground="Black">

    <UserControl.DataContext>
        <ViewModels:System_PIO_ViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="AliceBlue" Height="550">
        <Grid.RowDefinitions>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="60*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Background="Azure">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                <materialDesign:PackIcon Kind="Adjust" VerticalAlignment="Center" Width="32" Height="32" Foreground="Black"/>
                <TextBlock Text="PIO Common Fields : " FontSize="32" Foreground="Black"/>
            </StackPanel>
            <Separator VerticalAlignment="Bottom" />
        </Grid>

        <StackPanel Grid.Row="1" Margin="20 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" >
            <materialDesign:PackIcon Kind="Timeline" Foreground="{Binding ElementName=txt_PIO_0, Path=BorderBrush}" VerticalAlignment="Center" Height="20" Width="20" />
            <TextBlock Text=" Waiting time for interface at docking   " FontSize="15" VerticalAlignment="Center" Foreground="{Binding ElementName=txt_PIO_0, Path=BorderBrush}"/>
            <TextBox x:Name ="txt_PIO_0" Uid="0" Text="{Binding NInterfaceTimeout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Waiting Time" Width="100" HorizontalAlignment="Center" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.PIOdata, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Uid, ElementName=txt_PIO_0}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="sec" FontSize="15" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txt_PIO_0, Path=BorderBrush}"/>
        </StackPanel>

        <StackPanel Grid.Row="2" Margin="20 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" >
            <materialDesign:PackIcon Kind="AlignVerticalCenter" Foreground="{Binding ElementName=txt_PIO_1, Path=BorderBrush}" VerticalAlignment="Center" Height="20" Width="20" />
            <TextBlock Text=" Sensor checking time for align at the docking to the machine   " FontSize="15" VerticalAlignment="Center" Foreground="{Binding ElementName=txt_PIO_1, Path=BorderBrush}"/>
            <TextBox x:Name ="txt_PIO_1" Uid="1" Text="{Binding NDockSenChkTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Sensing timeout" Width="100" HorizontalAlignment="Center" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.PIOdata, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Uid, ElementName=txt_PIO_1}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="sec" FontSize="15" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txt_PIO_1, Path=BorderBrush}"/>
        </StackPanel>

        <StackPanel Grid.Row="3" Margin="20 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" >
            <materialDesign:PackIcon Kind="Transfer" Foreground="{Binding ElementName=txt_PIO_2, Path=BorderBrush}" VerticalAlignment="Center" Height="20" Width="20" />
            <TextBlock Text=" Checking time for inlet sensor the tray   " FontSize="15" VerticalAlignment="Center" Foreground="{Binding ElementName=txt_PIO_2, Path=BorderBrush}"/>
            <TextBox x:Name ="txt_PIO_2" Uid="2" Text="{Binding NFeedTimeOut_Start, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Timeout" Width="100" HorizontalAlignment="Center" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.PIOdata, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Uid, ElementName=txt_PIO_2}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="sec" FontSize="15" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txt_PIO_2, Path=BorderBrush}"/>
        </StackPanel>

        <StackPanel Grid.Row="4" Margin="20 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" >
            <materialDesign:PackIcon Kind="Transfer" Foreground="{Binding ElementName=txt_PIO_3, Path=BorderBrush}" VerticalAlignment="Center" Height="20" Width="20" />
            <TextBlock Text=" Checking time for material transferring done   " FontSize="15" VerticalAlignment="Center" Foreground="{Binding ElementName=txt_PIO_3, Path=BorderBrush}"/>
            <TextBox x:Name ="txt_PIO_3" Uid="3" Text="{Binding NFeedTimeOut_Work, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Timeout" Width="100" HorizontalAlignment="Center" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.PIOdata, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Uid, ElementName=txt_PIO_3}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="sec" FontSize="15" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txt_PIO_3, Path=BorderBrush}"/>
        </StackPanel>

        <StackPanel Grid.Row="5" Margin="20 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" >
            <materialDesign:PackIcon Kind="TimelineAlert" Foreground="{Binding ElementName=txt_PIO_4, Path=BorderBrush}" VerticalAlignment="Center" Height="20" Width="20" />
            <TextBlock Text=" Checking time for interface done   " FontSize="15" VerticalAlignment="Center" Foreground="{Binding ElementName=txt_PIO_4, Path=BorderBrush}"/>
            <TextBox x:Name ="txt_PIO_4" Uid="4" Text="{Binding NFeedTimeOut_End, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Timeout" Width="100" HorizontalAlignment="Center" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.PIOdata, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Uid, ElementName=txt_PIO_4}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="sec" FontSize="15" VerticalAlignment="Bottom" Foreground="{Binding ElementName=txt_PIO_4, Path=BorderBrush}"/>
        </StackPanel>

        <StackPanel Grid.Row="6" >
        </StackPanel>
    </Grid>
</UserControl>
